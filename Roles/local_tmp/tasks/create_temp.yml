---
- name: create temp directories
  file: 
    path: "{{ item }}" 
    state: directory
  with_items: "{{ temp_path }}"

- name: delete old node.log files
  file: 
    path: "{{ item }}node.log" 
    state: absent
  with_items: "{{ temp_path }}"
  ignore_errors: yes

- name: create node.log files
  file: 
    path: "{{ item }}node.log" 
    state: touch
    mode: ugo+rw
  with_items: "{{ temp_path }}"

- name: check that the api exists
  stat:
    path: "{{ item }}node-ml-api"
    get_attributes: no
    get_checksum: no
    get_mime: no
  with_items: "{{ temp_path }}"
  register: check_api

- name: copy api
  copy: 
    src: "/home/{{ ansible_user_id }}/node/node-ml-api"
    dest: "{{ item }}"
    mode: preserve
    directory_mode: ug+rw
  when: not check_api.results[{{ index }}].stat.exists or mode == "local_debug_api"
  with_items: "{{ temp_path }}"
  loop_control:
    index_var: index


- name: copy testnet
  copy: 
    src: "/home/{{ ansible_user_id }}/node/testnet"
    dest: "{{ item }}"
  with_items: "{{ temp_path }}"

- name: build node
  command: 
    cmd: make
    chdir: "{{ node_path }}"

- name: build GenesisGenerator
  command: 
    cmd: make
    chdir: "{{ node_path }}genesis-generator/"

- name: copy GenesisGenerator
  copy: 
    src: "{{ node_path }}genesis-generator/GenesisGenerator"
    dest: "{{ item }}"
    mode: preserve
  with_items: "{{ temp_path }}"

- name: copy node
  copy: 
    src: "{{ node_path }}Main.cake"
    dest: "{{ item }}"
    mode: preserve
  with_items: "{{ temp_path }}"

- name: template api-pipe-settings
  ansible.builtin.template:
    src: "api-pipe-settings-docker.j2"
    dest: "{{ item }}/pipe-settings.py"
  with_items: "{{ temp_path }}"

- name: template api-settings
  ansible.builtin.template:
    src: "api-settings.j2"
    dest: "{{ item.0 }}/api-settings.py"
  loop: "{{ temp_path|zip(nodes)|list }}"

- name: template docker-compose-local
  ansible.builtin.template:
    src: "docker-compose-local.j2"
    dest: "{{ item.0 }}/docker-compose.yml"
  loop: "{{ temp_path|zip(nodes)|list }}"

- name: template loki-config.j2
  ansible.builtin.template:
    src: "loki-config.j2"
    dest: "{{ temp_path[0] }}/local-config.yaml"

- name: template docker-compose-loki.j2
  ansible.builtin.template:
    src: "docker-compose-loki.j2"
    dest: "{{ temp_path[0] }}/docker-compose-loki.yml"

- name: template grafana.j2
  ansible.builtin.template:
    src: "grafana.j2"
    dest: "{{ temp_path[0] }}/grafana.ini"