---
- name: check that the CakeML exists
  stat:
    path: "/home/{{ ansible_user_id }}/cake-x64-64/cake"
    get_attributes: no
    get_checksum: no
    get_mime: no
  register: check_cake

- name: download CakeML
  ansible.builtin.unarchive:
    src: https://github.com/CakeML/cakeml/releases/download/v1370/cake-x64-64.tar.gz
    dest: /home/{{ ansible_user_id }}/
    creates: /home/{{ ansible_user_id }}/cake-x64-64
    remote_src: yes
    mode: ugo+rw
  when: not check_cake.stat.exists

- name: build CakeML
  command: 
    cmd: make
    chdir: "/home/{{ ansible_user_id }}/cake-x64-64"
  when: not check_cake.stat.exists

- name: build node
  command: 
    cmd: make
    chdir: "/home/{{ ansible_user_id }}/node/node-ml/" 

- name: build GenesisGenerator
  command: 
    cmd: make
    chdir: "/home/{{ ansible_user_id }}/node/node-ml/genesis-generator/"

- name: template api-pipe-settings
  ansible.builtin.template:
    src: "./templates/api-pipe-settings-docker.j2"
    dest: "/home/{{ ansible_user_id }}/node/pipe-settings.py"

- name: template api-settings
  ansible.builtin.template:
    src: "./templates/api-settings.j2"
    dest: "/home/{{ ansible_user_id }}/node/api-settings.py"

- name: create node image
  command: 
    cmd: "docker build -t {{ node_name }}:{{ tag }} -f ./Dockerfile-node-prod ./../"
  when: mode != "api"

- name: create api image
  command: 
    cmd: "docker build -t {{ api_name }}:{{ tag }} -f ./Dockerfile-api-prod ./../"
  when: mode != "node"