---
- name: check that the CakeML exists
  stat:
    path: "{{ ansible_user_dir }}/cake-x64-64/cake"
    get_attributes: no
    get_checksum: no
    get_mime: no
  register: check_cake

- name: download CakeML
  ansible.builtin.unarchive:
    src: https://github.com/CakeML/cakeml/releases/download/v1370/cake-x64-64.tar.gz
    dest: {{ ansible_user_dir }}/
    creates: {{ ansible_user_dir }}/cake-x64-64
    remote_src: yes
    mode: ugo+rw
  when: not check_cake.stat.exists

- name: build CakeML
  command: 
    cmd: make
    chdir: "{{ ansible_user_dir }}/cake-x64-64"
  when: not check_cake.stat.exists

- name: build node
  command: 
    cmd: make
    chdir: "{{ hostvars.localhost.ansible_facts.user_dir }}/node/node-ml/" 
  tags:
  - rebuild

- name: create testnet directory
  file: path={{ hostvars.localhost.ansible_facts.user_dir }}/node/testnet state=directory 

- name: build GenesisGenerator
  command: 
    cmd: make
    chdir: "{{ hostvars.localhost.ansible_facts.user_dir }}/node/node-ml/genesis-generator/"

- set_fact:
    node_set: "{{ node_set | default('') + item + ':8080,' }}"
  with_items:
    - "{{ groups['managed_nodes'] }}"

- name: generate testnet
  command: 
    cmd: "./GenesisGenerator -o={{ hostvars.localhost.ansible_facts.user_dir }}/node/testnet -i={{ node_set[:-1] }} -m"
    chdir: "{{ hostvars.localhost.ansible_facts.user_dir }}/node/node-ml/genesis-generator/"
